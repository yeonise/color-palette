plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.yeon'
version = '1.0.0'

java {
	sourceCompatibility = '17'
}

jacoco {
	toolVersion = '0.8.9'
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	asciidoctorExt
}

dependencies {
	// Web MVC
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Validation
	implementation "org.springframework.boot:spring-boot-starter-validation"

	// Web Client
	implementation "org.springframework.boot:spring-boot-starter-webflux"

	// JWT
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.2'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.2'

	// Database
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// REST Docs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
	useJUnitPlatform()
}

ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	finalizedBy jacocoTestReport
	outputs.dir snippetsDir
}

jacocoTestReport {
	dependsOn test

	reports {
		xml.required.set(true)
		html.required.set(true)
	}
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'

	sources {
		include("**/index.adoc")
	}

	baseDirFollowsSourceFile()
	dependsOn test
}

bootJar {
	dependsOn asciidoctor

	from("${asciidoctor.outputDir}") {
		into 'static/docs'
	}
}
